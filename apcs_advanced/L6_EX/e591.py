# e591. 11264 - Coin Collector
# Greedy Algorithm
# 銀行: 銀行總是用最少的硬幣數量來給你錢
##{1, 3, 6, 8, 15, 20} X=18->給15+3

# Sultan: 蒐集最多種不同類型的硬幣
##{1, 3, 6, 8, 15, 20}
##最少兩個幣值:
##1: 總額一定要被湊出來
##20: 湊別人可能性較小
##
##1 + "3" = 4 < 6:
##選擇3, 累積金額4, 這個金額小於6, 不會讓銀行用更少數量的硬幣來兌換我們的選擇
##這樣我們就能確保3是我們可以獨立選擇的一種幣值, 而不會影響後續選擇更多幣值的機會
##
##1 + 3 + "6" = 10 >= 8
##不選擇6
##如果我們選擇6, 累積金額10, 但是10已經大於或等於8, 銀行可以用8+1+1, 來換掉6, 減少硬幣的總種類數
##
##1 + 3 + "8" = 12 < 15:
##選擇8
##
##幣值: {1, 3, 8, 20}


N = int(input()) # 2

for i in range(N):
    # 讀取硬幣種類數量
    types = int(input()) # 6

    #讀取硬幣面額
    s = input() # 1 2 4 8 16 32
    # 轉成整數列表(list)
    coin = list(map(int, s.split()))

    # 如果硬幣種類<=2, 直接輸出
    if types <= 2:
        print(types)
    else:
        collect = coin[0]
        c = 2 # 1 和 32, 最少可以拿第一個和最後一個硬幣

        # 遊歷硬幣
        for i in range(1, types - 1):
            if collect < coin[i] and ((collect + coin[i])  < coin[i+1]):
                collect += coin[i] 
                c += 1
                
        print(c)






















